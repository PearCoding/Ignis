// Dummy file used to generate a C interface for the renderer

#[export]
fn ig_callback_shader(_settings: &Settings) -> () {
    // Force the export of the primary and secondary stream types
    let mut primary : PrimaryStream;
    let mut secondary : SecondaryStream;
    ignis_get_primary_stream(  0, 0, &mut primary,   0);
    ignis_get_secondary_stream(0, 0, &mut secondary, 0);

    let mut temp : TemporaryStorageHost;
    ignis_get_temporary_storage(0, &mut temp);

    let mut work_info : WorkInfo;
    ignis_get_work_info(&mut work_info);

    // Force the export of BVH types
    let mut node2 : &[Node2];
    let mut node4 : &[Node4];
    let mut node8 : &[Node8];
    let mut entityleaf : &[EntityLeaf1];
    
    ignis_load_bvh2_ent(0, "", &mut node2, &mut entityleaf);
    ignis_load_bvh4_ent(0, "", &mut node4, &mut entityleaf);
    ignis_load_bvh8_ent(0, "", &mut node8, &mut entityleaf);

    // Force the export
    let mut tbl : DynTableData;
    ignis_load_dyntable(0, "", &mut tbl);

    let mut info : SceneInfo;
    ignis_load_scene_info(0, &mut info);

    let mut rays : &[StreamRay];
    ignis_load_rays(0, &mut rays);
}

#[export]
fn ig_ray_generation_shader(_settings: &Settings, _next_id: i32, _size: i32, _xmin: i32, _ymin: i32, _xmax: i32, _ymax: i32) -> i32 {
    0
}

#[export]
fn ig_traversal_shader(_settings: &Settings, _size: i32) -> () {
}

#[export]
fn ig_miss_shader(_settings: &Settings, _first: i32, _last: i32) -> () {
}

#[export]
fn ig_hit_shader(_settings: &Settings, _mat_id: i32, _first: i32, _last: i32) -> () {
}

#[export]
fn ig_advanced_shadow_shader(_settings: &Settings, _mat_id: i32, _first: i32, _last: i32) -> () {
    // If is hit or miss is hardcoded
}

#[export]
fn ig_imageinfo_shader(_settings: &Settings, _in_pixels: &[f32], _width: i32, _height: i32, _ii_settings: &ImageInfoSettings, _output: &ImageInfoOutput) -> () {
}

#[export]
fn ig_tonemap_shader(_settings: &Settings, _in_pixels: &[f32], _out_pixels: &mut [u32], _width: i32, _height: i32, _t_settings: &TonemapSettings) -> () {
}

#[export]
fn ig_bake_shader(_settings: &Settings, _output: &mut [f32]) -> () {
}