// Creates a physically-correct Phong BSDF
fn @make_phong_bsdf(surf: SurfaceElement, ks: Color, ns: f32) = Bsdf {
    eval = @ |in_dir, out_dir| {
        let cosI = math_builtins::fabs(vec3_dot(in_dir, surf.local.col(2)));
        let cos  = positive_cos(in_dir, vec3_reflect(out_dir, surf.local.col(2)));
        color_mulf(ks, cosI * fastpow/*math_builtins::pow*/(cos, ns) * (ns + 2) / (2 * flt_pi))
    },
    pdf = @ |in_dir, out_dir| {
        let cos = positive_cos(in_dir, vec3_reflect(out_dir, surf.local.col(2)));
        cosine_power_hemisphere_pdf(cos, ns)
    },
    sample = @ |rnd, out_dir, _| {
        let reflect_out = vec3_reflect(out_dir, surf.local.col(2));
        let sample      = sample_cosine_power_hemisphere(ns, randf(rnd), randf(rnd));
        let in_dir      = mat3x3_mul(make_orthonormal_mat3x3(reflect_out), sample.dir);
        let cos         = positive_cos(in_dir, surf.local.col(2));
        let color       = color_mulf(ks, cos * (ns + 2) / (ns + 1)); // TODO: Really cos?
        make_bsdf_sample(in_dir, sample.pdf, color, 1)
    },
    is_specular = false
};
