fn @construct_cdf_1d_test() -> cdf::CDF1D {
    let data = [0.0:f32, 0.1:f32, 0.2:f32, 0.4:f32, 0.4:f32, 0.8:f32, 1.0:f32];
    cdf::make_cdf_1d(6, @|i| data(i))
}

fn test_cdf_1d_get() {
    let a = construct_cdf_1d_test();
    
    let val = a.get(3);
    if (val == 0.4) {
        0
    } else {
        ignis_test_fail("CDF1D Get: Expected 0.4 but got a different value");
        1
    }
}

fn test_cdf_1d_sample_disc_u_0() {
    let a = construct_cdf_1d_test();
    
    let sample = a.sample_discrete(0);
    let pdf    = a.pdf_discrete(sample.off);

    let mut err = 0:i32;
    if sample.off != 0 {
        ignis_test_fail("CDF1D Sample Discrete u=0: Expected off=0 but got a different value");
        err++;
    }

    if sample.pdf != pdf.pdf { 
        ignis_test_fail("CDF1D Sample Discrete u=0: Pdfs do not match");
        err++;
    }

    err
}

fn test_cdf_1d_sample_disc_u_1() {
    let a = construct_cdf_1d_test();
    
    let sample = a.sample_discrete(1);
    let pdf    = a.pdf_discrete(sample.off);

    let mut err = 0:i32;    
    if sample.off != 5 {
        ignis_test_fail("CDF1D Sample Discrete u=1: Expected off=5 but got a different value");
        err++;
    }

    if sample.pdf != pdf.pdf { 
        ignis_test_fail("CDF1D Sample Discrete u=1: Pdfs do not match");
        err++;
    }

    err
}

fn test_cdf_1d_sample_cont_u_0() {
    let a = construct_cdf_1d_test();
    
    let sample = a.sample_continuous(0);
    let pdf    = a.pdf_continuous(sample.pos);

    let mut err = 0:i32;
    if sample.pos != 0 {
        ignis_test_fail("CDF1D Sample Continuous u=0: Expected pos=0 but got a different value");
        err++;
    }

    if sample.off != 0 {
        ignis_test_fail("CDF1D Sample Continuous u=0: Expected off=0 but got a different value");
        err++;
    }

    if sample.pdf != pdf.pdf { 
        ignis_test_fail("CDF1D Sample Continuous u=0: Pdfs do not match");
        err++;
    }

    err
}

fn test_cdf_1d_sample_cont_u_1() {
    let a = construct_cdf_1d_test();
    
    let sample = a.sample_continuous(1);
    let pdf    = a.pdf_continuous(sample.pos);

    let mut err = 0:i32;
    if sample.pos != 1 {
        ignis_test_fail("CDF1D Sample Continuous u=1: Expected pos=1 but got a different value");
        err++;
    }
    
    if sample.off != 5 {
        ignis_test_fail("CDF1D Sample Continuous u=1: Expected off=5 but got a different value");
        err++;
    }

    if sample.pdf != pdf.pdf { 
        ignis_test_fail("CDF1D Sample Continuous u=1: Pdfs do not match");
        err++;
    }

    err
}

fn test_cdf_1d_sample_cont_u_079() {
    let a = construct_cdf_1d_test();
    
    let sample = a.sample_continuous(0.79);
    let pdf    = a.pdf_continuous(sample.pos);

    let mut err = 0:i32;    
    if sample.off != 4 {
        ignis_test_fail("CDF1D Sample Continuous u=0.79: Expected off=4 but got a different value");
        err++;
    }

    if sample.pdf != pdf.pdf { 
        ignis_test_fail("CDF1D Sample Continuous u=0.79: Pdfs do not match");
        err++;
    }

    err
}

fn test_cdf_1d_sample_cont_u_08() {
    let a = construct_cdf_1d_test();
    
    let sample = a.sample_continuous(0.8);
    let pdf    = a.pdf_continuous(sample.pos);

    let mut err = 0:i32;    
    if sample.off != 5 {
        ignis_test_fail("CDF1D Sample Continuous u=0.8: Expected off=5 but got a different value");
        err++;
    }

    if sample.pdf != pdf.pdf { 
        ignis_test_fail("CDF1D Sample Continuous u=0.8: Pdfs do not match");
        err++;
    }

    err
}

fn test_cdf_1d_sample_cont_disc() {
    let a = construct_cdf_1d_test();
    
    let sample_disc = a.sample_discrete(0.57);
    let sample_cont = a.sample_continuous(0.57);

    let mut err = 0:i32;    
    if sample_disc.off != sample_cont.off {
        ignis_test_fail("CDF1D Sample Continuous & Discrete: Expected offset to match");
        err++;
    }

    err
}

fn test_cdf() -> i32 { 
    let mut err = 0;

    err += test_cdf_1d_get();
    err += test_cdf_1d_sample_disc_u_0();
    err += test_cdf_1d_sample_disc_u_1();
    err += test_cdf_1d_sample_cont_u_0();
    err += test_cdf_1d_sample_cont_u_1();
    err += test_cdf_1d_sample_cont_u_079();
    err += test_cdf_1d_sample_cont_u_08();
    err += test_cdf_1d_sample_cont_disc();

    err
 }