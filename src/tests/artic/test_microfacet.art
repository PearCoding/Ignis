fn @make_setup() -> (Vec3, Vec3, Vec3) {
    let in_dir  = vec3_normalize(make_vec3( 1,1,1));
    let out_dir = vec3_normalize(make_vec3(-1,1,1));
    let h       = vec3_halfway(in_dir, out_dir);
    (in_dir, out_dir, h)
}

fn test_microfacet_ggx_iso() {
    let mut err = 0;

    let dst = $microfacet::make_ggx_distribution(mat3x3_identity(), 0.1, 0.1);
    let (wi, wo, H) = make_setup();

    let D    = dst.D(H);
    let pdf1 = D * H.z;
    let pdf2 = dst.pdf(wi, wo, H);

    if !eq_f32(pdf1, pdf2) {
        ++err;
    }

    err  
}

fn test_microfacet_ggx_aniso() {
    let mut err = 0;

    let dst = $microfacet::make_ggx_distribution(mat3x3_identity(), 0.05, 0.45);
    let (wi, wo, H) = make_setup();

    let D    = dst.D(H);
    let pdf1 = D * H.z;
    let pdf2 = dst.pdf(wi, wo, H);

    if !eq_f32(pdf1, pdf2) {
        ++err;
    }

    err  
}

fn test_microfacet_ggx_sample() {
    let mut err = 0;

    let mut rnd = fnv_init();
    rnd = fnv_hash(rnd, 42);

    let (_, wo, _) = make_setup();
    let dst    = $microfacet::make_ggx_distribution(mat3x3_identity(), 0.05, 0.45);
    let sample = dst.sample(&mut rnd, wo);
    let wi     = vec3_reflect(wo, sample.normal);
    
    let pdf1 = sample.pdf;
    let pdf2 = dst.pdf(wi, wo, sample.normal);

    if !eq_f32(pdf1, pdf2) {
        ++err;
    }

    err  
}

fn test_microfacet_beckmann_iso() {
    let mut err = 0;

    let dst = $microfacet::make_beckmann_distribution(mat3x3_identity(), 0.1, 0.1);
    let (wi, wo, H) = make_setup();

    let D    = dst.D(H);
    let pdf1 = D * H.z;
    let pdf2 = dst.pdf(wi, wo, H);

    if !eq_f32(pdf1, pdf2) {
        ++err;
    }

    err  
}

fn test_microfacet_beckmann_aniso() {
    let mut err = 0;

    let dst = $microfacet::make_beckmann_distribution(mat3x3_identity(), 0.05, 0.45);
    let (wi, wo, H) = make_setup();

    let D    = dst.D(H);
    let pdf1 = D * H.z;
    let pdf2 = dst.pdf(wi, wo, H);

    if !eq_f32(pdf1, pdf2) {
        ++err;
    }

    err  
}

fn test_microfacet_beckmann_sample() {
    let mut err = 0;

    let mut rnd = fnv_init();
    rnd = fnv_hash(rnd, 42);

    let (_, wo, _) = make_setup();
    let dst    = $microfacet::make_beckmann_distribution(mat3x3_identity(), 0.05, 0.45);
    let sample = dst.sample(&mut rnd, wo);
    let wi     = vec3_reflect(wo, sample.normal);

    let pdf1 = sample.pdf;
    let pdf2 = dst.pdf(wi, wo, sample.normal);

    if !eq_f32(pdf1, pdf2) {
        ++err;
    }

    err  
}

fn test_microfacet_vndf_ggx_sample() {
    let mut err = 0;

    let mut rnd = fnv_init();
    rnd = fnv_hash(rnd, 42);

    let (_, wo, _) = make_setup();
    let dst    = $microfacet::make_vndf_ggx_distribution(make_vec3(0,0,1), mat3x3_identity(), 0.05, 0.45);
    let sample = dst.sample(&mut rnd, wo);
    let wi     = vec3_reflect(wo, sample.normal);

    let pdf1 = sample.pdf;
    let pdf2 = dst.pdf(wi, wo, sample.normal);

    if !eq_f32(pdf1, pdf2) {
        ++err;
    }

    err  
}

fn test_microfacet() -> i32 { 
    let mut err = 0;

    err += test_microfacet_ggx_iso();
    err += test_microfacet_ggx_aniso();
    err += test_microfacet_ggx_sample();
    err += test_microfacet_beckmann_iso();
    err += test_microfacet_beckmann_aniso();
    err += test_microfacet_beckmann_sample();
    err += test_microfacet_vndf_ggx_sample();

    err
 }